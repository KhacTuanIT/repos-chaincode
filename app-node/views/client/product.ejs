<!-- Begin Li's Breadcrumb Area -->
<div class="breadcrumb-area">
  <div class="container">
    <div class="breadcrumb-content">
      <ul>
        <li><a href="/">Home</a></li>
        <li class="active">Products</li>
      </ul>
    </div>
  </div>
</div>
<!-- Li's Breadcrumb Area End Here -->
<!-- Begin Li's Content Wraper Area -->
<div class="content-wraper pt-60 pb-60 pt-sm-30">
  <div class="container">
    <div class="row">
      <div class="col-lg-3 order-1 order-lg-1">
        <!-- category-sub-menu start -->
        <div class="sidebar-categores-box mb-sm-1 mb-xs-1">
          <div class="sidebar-title">
            <h2>Type</h2>
          </div>
          <div class="category-tags">
            <ul id="type-list"></ul>
          </div>
          <!-- category-sub-menu end -->
        </div>
        <!-- category-sub-menu start -->
        <div class="sidebar-categores-box mb-sm-1 mb-xs-1">
          <div class="sidebar-title">
            <h2>Manufacturer</h2>
          </div>
          <div class="category-tags">
            <ul id="manufacturer-list"></ul>
          </div>
          <!-- category-sub-menu end -->
        </div>
      </div>
      <div class="col-lg-9 order-2 order-lg-2">
        <!-- shop-top-bar start -->
        <div class="shop-top-bar">
          <div class="shop-bar-inner">
            <div class="toolbar-amount">
              <span id="totalProduct"></span>
            </div>
          </div>
          <!-- product-select-box start -->
          <div class="product-select-box">
            <div class="product-short">
              <p>Sort By:</p>
              <select class="nice-select" id="filter" name="filter">
                <option value="">Default</option>
                <option value="az">Name (A - Z)</option>
                <option value="za">Name (Z - A)</option>
                <option value="aprice">Price (Low &gt; High)</option>
                <option value="dprice">Price (High &gt; Low)</option>
              </select>
            </div>
          </div>
          <!-- product-select-box end -->
        </div>
        <!-- shop-top-bar end -->
        <!-- shop-products-wrapper start -->
        <div class="shop-products-wrapper">
          <div class="tab-content">
            <div id="grid-view" class="tab-pane fade active show" role="tabpanel">
              <div class="product-area shop-product-area">
                <div class="row" id="product-grid"></div>
              </div>
            </div>
            <div class="paginatoin-area mt-120">
              <div class="row">
                <div class="col-lg-6 col-md-6 pt-xs-15"></div>
                <div class="col-lg-6 col-md-6">
                  <ul class="pagination-box pt-xs-20 pb-xs-15" id="paginationArea"></ul>
                </div>
              </div>
            </div>
          </div>
        </div>
        <!-- shop-products-wrapper end -->
      </div>
    </div>
  </div>
</div>
<div class="hidden" id="tempData" data-destination="1"></div>
<!-- Content Wraper Area End Here -->

<script>
  function setLoadding() {
    window.scrollTo(0, 0);
    $("#product-grid").html(
      '<div class="view-loading"><div class="lds-hourglass"></div></div>'
    );
  }

  $(document).ready(function () {
    const getSearchKey = () => {
      let urlString = window.location.href;
      let url = new URL(urlString);
      let search = url.searchParams.get("keyword");
      let type = url.searchParams.get("type");
      let manufacturer = url.searchParams.get("manufacturer");
      return { search, type, manufacturer };
    };

    const pagination = (page, total) => {
      let start = total > 0 ? 1 : 0;
      let end = Math.ceil(total / 9);
      let startProduct = total > 0 ? (page - 1) * 9 + 1 : 0;
      let endProduct = startProduct + 9 > total ? total : startProduct + 8;
      $("#totalProduct").text(
        "Showing " +
        startProduct +
        " - " +
        endProduct +
        " of " +
        total +
        ` item${total > 1 ? "s" : ""}`
      );
      let paginationContent = "";
      if (page > 1) {
        paginationContent +=
          "<li>" +
          '<a data-destination="1" class="product-paged Previous"' +
          '><i class="fa fa-chevron-left"></i> Previous</a' +
          ">" +
          "</li>";
      } else {
        paginationContent +=
          "<li>" +
          '<a disabled="disabled" class="product-paged Previous"' +
          '><i class="fa fa-chevron-left"></i> Previous</a' +
          ">" +
          "</li>";
      }

      if (end > 5) {
        let middle = Math.ceil(end / 2);
        if (page < middle) {
          if (page < middle - 2) {
            if (page - 2 > 1) {
              paginationContent +=
                '<li><a class="product-paged" data-destination="1">1</a></li>';
              paginationContent += "<li><a>...</a></li>";
              for (let i = page - 2; i <= page + 2; i++) {
                if (i == page) {
                  paginationContent +=
                    '<li class="active"><a>' + i + "</a></li>";
                } else {
                  paginationContent +=
                    '<li><a class="product-paged" data-destination="' +
                    i +
                    '">' +
                    i +
                    "</a></li>";
                }
              }
              paginationContent += "<li><a>...</a></li>";
              paginationContent +=
                '<li><a class="product-paged" data-destination="' +
                end +
                '">' +
                end +
                "</a></li>";
            } else {
              for (let i = 1; i <= page + 2; i++) {
                if (i == page) {
                  paginationContent +=
                    '<li class="active"><a>' + i + "</a></li>";
                } else {
                  paginationContent +=
                    '<li><a class="product-paged" data-destination="' +
                    i +
                    '">' +
                    i +
                    "</a></li>";
                }
              }
              paginationContent += "<li><a>...</a></li>";
              paginationContent +=
                '<li><a class="product-paged" data-destination="' +
                end +
                '">' +
                end +
                "</a></li>";
            }
          } else {
            if (page - 2 > 1) {
              paginationContent +=
                '<li><a class="product-paged" data-destination="1">1</a></li>';
              paginationContent += "<li><a>...</a></li>";
              for (let i = page - 2; i <= middle; i++) {
                if (i == page) {
                  paginationContent +=
                    '<li class="active"><a>' + i + "</a></li>";
                } else {
                  paginationContent +=
                    '<li><a class="product-paged" data-destination="' +
                    i +
                    '">' +
                    i +
                    "</a></li>";
                }
              }
              paginationContent += "<li><a>...</a></li>";
              paginationContent +=
                '<li><a class="product-paged" data-destination="' +
                end +
                '">' +
                end +
                "</a></li>";
            } else {
              for (let i = 1; i <= middle; i++) {
                if (i == page) {
                  paginationContent +=
                    '<li class="active"><a>' + i + "</a></li>";
                } else {
                  paginationContent +=
                    '<li><a class="product-paged" data-destination="' +
                    i +
                    '">' +
                    i +
                    "</a></li>";
                }
              }
              paginationContent += "<li><a>...</a></li>";
              paginationContent +=
                '<li><a class="product-paged" data-destination="' +
                end +
                '">' +
                end +
                "</a></li>";
            }
          }
        } else {
          if (page > middle - 2) {
            if (page + 2 < end) {
              paginationContent +=
                '<li><a class="product-paged" data-destination="1">1</a></li>';
              paginationContent += "<li><a>...</a></li>";
              for (let i = page - 2; i <= page + 2; i++) {
                if (i == page) {
                  paginationContent +=
                    '<li class="active"><a>' + i + "</a></li>";
                } else {
                  paginationContent +=
                    '<li><a class="product-paged" data-destination="' +
                    i +
                    '">' +
                    i +
                    "</a></li>";
                }
              }
              paginationContent += "<li><a>...</a></li>";
              paginationContent +=
                '<li><a class="product-paged" data-destination="' +
                end +
                '">' +
                end +
                "</a></li>";
            } else {
              for (let i = page - 2; i <= end; i++) {
                if (i == page) {
                  paginationContent +=
                    '<li class="active"><a>' + i + "</a></li>";
                } else {
                  paginationContent +=
                    '<li><a class="product-paged" data-destination="' +
                    i +
                    '">' +
                    i +
                    "</a></li>";
                }
              }
              paginationContent += "<li><a>...</a></li>";
              paginationContent +=
                '<li><a class="product-paged" data-destination="' +
                end +
                '">' +
                end +
                "</a></li>";
            }
          } else {
            if (page + 2 < end) {
              paginationContent +=
                '<li><a class="product-paged" data-destination="1">1</a></li>';
              paginationContent += "<li><a>...</a></li>";
              for (let i = middle; i <= page + 2; i++) {
                if (i == page) {
                  paginationContent +=
                    '<li class="active"><a>' + i + "</a></li>";
                } else {
                  paginationContent +=
                    '<li><a class="product-paged" data-destination="' +
                    i +
                    '">' +
                    i +
                    "</a></li>";
                }
              }
              paginationContent += "<li><a>...</a></li>";
              paginationContent +=
                '<li><a class="product-paged" data-destination="' +
                end +
                '">' +
                end +
                "</a></li>";
            } else {
              for (let i = middle; i <= end; i++) {
                if (i == page) {
                  paginationContent +=
                    '<li class="active"><a>' + i + "</a></li>";
                } else {
                  paginationContent +=
                    '<li><a class="product-paged" data-destination="' +
                    i +
                    '">' +
                    i +
                    "</a></li>";
                }
              }
              paginationContent += "<li><a>...</a></li>";
              paginationContent +=
                '<li><a class="product-paged" data-destination="' +
                end +
                '">' +
                end +
                "</a></li>";
            }
          }
        }
      } else {
        for (let i = 1; i <= end; i++) {
          if (i == page) {
            paginationContent += '<li class="active"><a>' + i + "</a></li>";
          } else {
            paginationContent +=
              '<li><a class="product-paged" data-destination="' +
              i +
              '">' +
              i +
              "</a></li>";
          }
        }
      }

      if (page < end) {
        paginationContent +=
          "<li>" +
          '<a data-destination="' +
          end +
          '" class="product-paged Next">' +
          'Next <i class="fa fa-chevron-right"></i' +
          "></a>" +
          "</li>";
      } else {
        paginationContent +=
          "<li>" +
          '<a disabled="disabled" class="product-paged Next">' +
          'Next <i class="fa fa-chevron-right"></i' +
          "></a>" +
          "</li>";
      }
      $("#paginationArea").html(paginationContent);
    };

    $(document).on("change", "#filter", function (e) {
      let filter = $(this).val();
      if (filter) {
        $("#tempData").data("filter", filter);
        let search = $("#tempData").data("keyword");
        let destination = $("#tempData").data("destination");
        let type = $("#tempData").data("type");
        let manufacturer = $("#tempData").data("manufacturer");
        type = type ? type : "";
        manufacturer = manufacturer ? manufacturer : "";
        search = search ? search : "";
        destination = destination ? destination : "";
        setLoadding();
        $.ajax({
          url: "/api/products-paged",
          type: "get",
          data: {
            org: "supply",
            keyword: search,
            filter: filter,
            page: parseInt(destination),
            type: type,
            manufacturer: manufacturer,
          },
          success: function (res) {
            if (res?.total > 0) {
              let gridContent = "";
              let listContent = "";
              let { products, page, total } = res;

              let product = undefined;
              products.forEach((prod) => {
                product = prod.Value;
                gridContent +=
                  '<div class="col-lg-4 col-md-4 col-sm-6 mt-40"><div class="single-product-wrap"><div class="product-image">' +
                  '<a href="/product-details/' +
                  product.code +
                  '">';
                if (
                  product.primaryImage === "" ||
                  product.primaryImage === "none"
                ) {
                  gridContent +=
                    '<img src="/assets/images/product/large-size/1.jpg" />';
                } else {
                  gridContent +=
                    '<img src="/images/' + product.primaryImage + '" />';
                }
                gridContent +=
                  "</a>" +
                  '</div><div class="product_desc">' +
                  '<div class="product_desc_info"><div class="product-review"><h5 class="manufacturer">' +
                  '<a href="/product-details/' +
                  product.code +
                  '">' +
                  product.manufacturer[0].Value.name +
                  '</a></h5></div><h4><a class="product_name" href="/product-details/' +
                  product.code +
                  '">' +
                  product.name +
                  "</a></h4>" +
                  '<div class="price-box"><span class="new-price">$' +
                  product.price +
                  "</span></div>" +
                  '<div class="price-box">CPU: ' +
                  product.cpu +
                  "</div>" +
                  '<div class="price-box">RAM: ' +
                  product.ram +
                  "</div></div>" +
                  '<div class="add-actions"><ul class="add-actions-link"><li class="add-cart active">' +
                  '<a data-key="' + product.code + '" class="add-item-to-cart"' +
                  product.code +
                  '"> Add to cart </a></li>' +
                  '<li><a title="quick view" class="quick-view-btn" data-key="' +
                  product.code +
                  '">' +
                  '<i class="fa fa-eye"></i></a></li></ul></div></div></div></div>';
              });
              pagination(page, total);
              $("#product-grid").empty();
              $("#product-grid").append(gridContent);
            } else {
              $("#product-grid").empty();
              $("#product-grid").append(
                '<div class="col-lg-12 col-md-12 col-sm-12 mt-40 d-flex justify-content-center">Not found any products</div>'
              );
            }
          },
          error: function (r, h, e) {
            console.log(e);
            $("#product-grid").empty();
            $("#product-grid").append(
              '<div class="col-lg-12 col-md-12 col-sm-12 mt-40 d-flex justify-content-center">Not found any products</div>'
            );
          },
        });
      }
    });

    $(document).on("click", ".product-paged", function (e) {
      let destination = $(this).data("destination");
      if (!$(this).attr("disabled")) {
        if (destination) {
          $("#tempData").data("destination", destination);
          let search = $("#tempData").data("keyword");
          let filter = $("#tempData").data("filter");
          let type = $("#tempData").data("type");
          let manufacturer = $("#tempData").data("manufacturer");
          type = type ? type : "";
          manufacturer = manufacturer ? manufacturer : "";
          search = search ? search : "";
          filter = filter ? filter : "";
          setLoadding();
          $.ajax({
            url: "/api/products-paged",
            type: "get",
            data: {
              org: "supply",
              keyword: search,
              filter: filter,
              page: parseInt(destination),
              type: type,
              manufacturer: manufacturer,
            },
            success: function (res) {
              if (res?.total > 0) {
                let gridContent = "";
                let listContent = "";
                let { products, page, total } = res;

                let product = undefined;
                products.forEach((prod) => {
                  product = prod.Value;
                  gridContent +=
                    '<div class="col-lg-4 col-md-4 col-sm-6 mt-40"><div class="single-product-wrap"><div class="product-image">' +
                    '<a href="/product-details/' +
                    product.code +
                    '">';
                  if (
                    product.primaryImage === "" ||
                    product.primaryImage === "none"
                  ) {
                    gridContent +=
                      '<img src="/assets/images/product/large-size/1.jpg" />';
                  } else {
                    gridContent +=
                      '<img src="/images/' + product.primaryImage + '" />';
                  }
                  gridContent +=
                    "</a>" +
                    '</div><div class="product_desc">' +
                    '<div class="product_desc_info"><div class="product-review"><h5 class="manufacturer">' +
                    '<a href="/product-details/' +
                    product.code +
                    '">' +
                    product.manufacturer[0].Value.name +
                    '</a></h5></div><h4><a class="product_name" href="/product-details/' +
                    product.code +
                    '">' +
                    product.name +
                    "</a></h4>" +
                    '<div class="price-box"><span class="new-price">$' +
                    product.price +
                    "</span></div>" +
                    '<div class="price-box">CPU: ' +
                    product.cpu +
                    "</div>" +
                    '<div class="price-box">RAM: ' +
                    product.ram +
                    "</div></div>" +
                    '<div class="add-actions"><ul class="add-actions-link"><li class="add-cart active">' +
                    '<a data-key="' + product.code + '" class="add-item-to-cart"' +
                    product.code +
                    '"> Add to cart </a></li>' +
                    '<li><a title="quick view" class="quick-view-btn" data-key="' +
                    product.code +
                    '">' +
                    '<i class="fa fa-eye"></i></a></li></ul></div></div></div></div>';
                });
                pagination(page, total);
                $("#product-grid").empty();
                $("#product-grid").append(gridContent);
              } else {
                $("#product-grid").empty();
                $("#product-grid").append(
                  '<div class="col-lg-12 col-md-12 col-sm-12 mt-40 d-flex justify-content-center">Not found any products</div>'
                );
              }
            },
            error: function (r, h, e) {
              console.log(e);
              $("#product-grid").empty();
              $("#product-grid").append(
                '<div class="col-lg-12 col-md-12 col-sm-12 mt-40 d-flex justify-content-center">Not found any products</div>'
              );
            },
          });
        }
      }
    });

    const loadProduct = () => {
      let { search, type, manufacturer } = getSearchKey();
      $("#tempData").data("keyword", search);
      $("#tempData").data("type", type);
      $("#tempData").data("manufacturer", manufacturer);
      setLoadding();
      $.ajax({
        url: "/api/products-paged",
        type: "get",
        data: {
          org: "supply",
          keyword: search,
          type: type,
          manufacturer: manufacturer,
        },
        success: function (res) {
          if (res?.total > 0) {
            let gridContent = "";
            let listContent = "";
            let { products, page, total } = res;

            let product = undefined;
            products.forEach((prod) => {
              product = prod.Value;
              gridContent +=
                '<div class="col-lg-4 col-md-4 col-sm-6 mt-40"><div class="single-product-wrap"><div class="product-image">' +
                '<a href="/product-details/' +
                product.code +
                '">';
              if (
                product.primaryImage === "" ||
                product.primaryImage === "none"
              ) {
                gridContent +=
                  '<img src="/assets/images/product/large-size/1.jpg" />';
              } else {
                gridContent +=
                  '<img src="/images/' + product.primaryImage + '" />';
              }
              gridContent +=
                "</a>" +
                '</div><div class="product_desc">' +
                '<div class="product_desc_info"><div class="product-review"><h5 class="manufacturer">' +
                '<a href="/product-details/' +
                product.code +
                '">' +
                product.manufacturer[0].Value.name +
                '</a></h5></div><h4><a class="product_name" href="/product-details/' +
                product.code +
                '">' +
                product.name +
                "</a></h4>" +
                '<div class="price-box"><span class="new-price">$' +
                product.price +
                "</span></div>" +
                '<div class="price-box">CPU: ' +
                product.cpu +
                "</div>" +
                '<div class="price-box">RAM: ' +
                product.ram +
                "</div></div>" +
                '<div class="add-actions"><ul class="add-actions-link"><li class="add-cart active">' +
                '<a data-key="' + product.code + '" class="add-item-to-cart"' +
                product.code +
                '"> Add to cart </a></li>' +
                '<li><a title="quick view" class="quick-view-btn" data-key="' +
                product.code +
                '">' +
                '<i class="fa fa-eye"></i></a></li></ul></div></div></div></div>';
            });
            pagination(page, total);
            $("#product-grid").empty();
            $("#product-grid").append(gridContent);
          } else {
            $("#product-grid").empty();
            $("#product-grid").append(
              '<div class="col-lg-12 col-md-12 col-sm-12 mt-40 d-flex justify-content-center">Not found any products</div>'
            );
          }
        },
        error: function (r, h, e) {
          console.log(e);
          $("#product-grid").empty();
          $("#product-grid").append(
            '<div class="col-lg-12 col-md-12 col-sm-12 mt-40 d-flex justify-content-center">Not found any products</div>'
          );
        },
      });
    };

    const loadType = () => {
      $("#type-list").html(
        '<div class="view-loading"><div class="lds-hourglass"></div></div>'
      );
      $.ajax({
        url: "/api/product-types",
        type: "get",
        success: function (res) {
          let { productTypes } = res;
          if (productTypes) {
            let ulType = $("#type-list");
            ulType.empty();
            let liType = undefined;
            let aType = undefined;
            let pth = window.location.href;
            console.log(pth);
            let isActive = false;
            productTypes.forEach((type) => {
              if (pth.includes(type.Value.productTypeId)) {
                isActive = true;
              }
              else {
                isActive = false;
              }
              if (!type.Value.is_delete) {
                liType = document.createElement("li");
                if (isActive) {
                  liType.className = 'li-active';
                }
                aType = document.createElement("a");
                aType.setAttribute(
                  "href",
                  "/products?type=" + type.Value.productTypeId
                );
                aType.innerText = type.Value.name;
                liType.append(aType);
                ulType.append(liType);
              }
            });
          }
        },
        error: function (jq, status, error) {
          console.log(jq);
        },
      });
    };

    const loadManufacturer = () => {
      $("#manufacturer-list").html(
        '<div class="view-loading"><div class="lds-hourglass"></div></div>'
      );
      $.ajax({
        url: "/api/manufactureres",
        type: "get",
        success: function (res) {
          let { manufactureres } = res;
          if (manufactureres) {
            let ulManufacturer = $("#manufacturer-list");
            ulManufacturer.empty();
            let liManufacturer = undefined;
            let aManudacturer = undefined;
            let pth = window.location.href;
            let isActive = false;
            manufactureres.forEach((manufacturer) => {
              if (pth.includes(manufacturer.Value.manufactororId)) {
                isActive = true;
              }
              else {
                isActive = false;
              }
              if (!manufacturer.Value.is_delete) {
                liManufacturer = document.createElement("li");
                if (isActive) {
                  liManufacturer.className = 'li-active';
                }
                aManudacturer = document.createElement("a");
                aManudacturer.setAttribute(
                  "href",
                  "/products?manufacturer=" + manufacturer.Value.manufactororId
                );
                aManudacturer.innerText = manufacturer.Value.name;
                liManufacturer.append(aManudacturer);
                ulManufacturer.append(liManufacturer);
              }
            });
          }
        },
        error: function (jq, status, error) {
          console.log(jq);
        },
      });
    };

    let pathname = window.location.pathname;
    if (pathname.includes("products")) {
      loadProduct();
      loadManufacturer();
      loadType();
    }
  });
</script>